import { createDefaultModule, DefaultModuleContext, inject, LangiumServices, Module, PartialLangiumServices } from 'langium';
import { HotDrinkDslGeneratedModule } from './generated/module';
import { HotDrinkDslScopeProvider } from './hot-drink-dsl-scope';
import { HotDrinkDslValidationRegistry, HotDrinkDslValidator } from './hot-drink-dsl-validator';

/**
 * Declaration of custom services - add your own service classes here.
 */
export type HotDrinkDslAddedServices = {
    validation: {
        HotDrinkDslValidator: HotDrinkDslValidator
    }
}

/**
 * Union of Langium default services and your custom services - use this as constructor parameter
 * of custom service classes.
 */
export type HotDrinkDslServices = LangiumServices & HotDrinkDslAddedServices

/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
export const HotDrinkDslModule: Module<HotDrinkDslServices, PartialLangiumServices & HotDrinkDslAddedServices> = {
    validation: {
        ValidationRegistry: (injector) => new HotDrinkDslValidationRegistry(injector),
        HotDrinkDslValidator: () => new HotDrinkDslValidator()
    },
    references : {
        ScopeProvider: (services) => new HotDrinkDslScopeProvider(services),
    }
    
};

/**
 * Inject the full set of language services by merging three modules:
 *  - Langium default services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 */
export function createHotDrinkDslServices(context?: DefaultModuleContext): HotDrinkDslServices {
    return inject(
        createDefaultModule(context),
        HotDrinkDslGeneratedModule,
        HotDrinkDslModule
    );
}
