/* 
        
component T {
    var income:number = 500000, percentage:number = 30, time:number = 12, finnmark: boolean = false, deduction:number, tax:number, net_income:number;
    
    constraint noname {
        m21(income, percentage, deduction -> tax, net_income) => [func1(income, percentage, deduction), 4];
        m22(tax, net_income, deduction, percentage -> income) => func2(tax, net_income, deduction, percentage);
        m23(income, percentage, deduction -> tax, net_income) => [tass(income, percentage, deduction), 5];
    }

    constraint m{
        method(finnmark, time -> deduction, percentage) => [ func3(finnmark, time), func2() ]; 
    }
} 
 */
component Te {
    //var c = 10.1, f; 
    var e: number;

    var g: number;
    var h: number;
    var i: number;
    var j: number;
    var f: number = 0;
    var c: number = 0;
    var d: number;

    constraint constr_degrees1 {
        method_from_c_to_g(c -> g) => (c * 9/5 + 32);
        method_from_g_to_c(g -> c) => (g - 32) * 5/9;
    }

    constraint constr_degrees2 {
        me(c->d) => c*2;
    }
}