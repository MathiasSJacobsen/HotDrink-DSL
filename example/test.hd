/* 
        
component T {
    var income:number = 500000, percentage:number = 30, time:number = 12, finnmark: boolean = false, deduction:number, tax:number, net_income:number;
    
    constraint noname {
        m21(income, percentage, deduction -> tax, net_income) => [func1(income, percentage, deduction), 4];
        m22(tax, net_income, deduction, percentage -> income) => func2(tax, net_income, deduction, percentage);
        m23(income, percentage, deduction -> tax, net_income) => [tass(income, percentage, deduction), 5];
    }

    constraint m{
        method(finnmark, time -> deduction, percentage) => [ func3(finnmark, time), func2() ]; 
    }
} 
 

component TemperaturConversion {
    
    var celsius:number = 10.1, fahrenheit:number;

    constraint constr_degrees {
        method_from_c_to_f(celsius -> fahrenheit) => (celsius * 9/5 + 32);
        method_from_f_to_c(fahrenheit -> celsius) => (fahrenheit - 32) * 5/9;
    }
}
*/
import { foo } from './temp.js'

component test {
    var a:number, b:number=1;


    constraint te {

        method2(a -> b) => foo(a);
        method3(b -> a) => b*2;

    }
}